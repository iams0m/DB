--대문자/소문자/첫글자만 대문자로 변환
SELECT UPPER(ENAME) FROM HR.EMP

--글자수
SELECT LENGTH(ENAME) FROM HR.EMP

--문자열 추출/문자열 위치
SELECT SUBSTR(ENAME, 2) FROM HR.EMP -- 2번째 글자부터 끝까지

SELECT SUBSTR(ENAME, -2) FROM HR.EMP -- -2번째 글자부터 끝까지 

SELECT SUBSTR(ENAME,1,2) FROM HR.EMP -- 1번째 글자부터 2개

--특정문자를 다른문자로 대체
SELECT REPLACE(ENAME, 'L', 'N') FROM HR.EMP 

--빈 공간을 특정문자로 대체
SELECT LPAD(ENAME,6,'#') FROM HR.EMP

--문자열 결합
SELECT CONCAT(EMPNO,ENAME) FROM HR.EMP 

SELECT EMPNO||' : '||ENAME FROM HR.EMP 

SELECT EMPNO||' : '||ENAME AS CONCAT_RESULT FROM HR.EMP 

--특정문자나 공백 삭제
SELECT TRIM('W' FROM ENAME) FROM HR.EMP 

SELECT TRIM(' hong') FROM HR.EMP

SELECT LENGTH(ENAME) FROM HR.EMP

SELECT LENGTH(TRIM(ENAME)) FROM HR.EMP

SELECT TRIM(BOTH 'A' FROM ENAME) FROM HR.EMP --양쪽 끝에 A 제거(쓸 일 거의 없음)

SELECT TRIM(LEADING 'A' FROM ENAME) FROM HR.EMP --앞쪽 A 제거

SELECT TRIM(TRAILING 'A' FROM ENAME) FROM HR.EMP --뒷쪽 A 제거

SELECT REPLACE(ENAME, ' ', '') FROM HR.EMP --중간에 있는 공백 제거

SELECT LENGTH(REPLACE(ENAME, ' ', '')) FROM HR.EMP

--NULL 처리 함수
UPDATE HR.EMP SET COMM = 0 WHERE COMM IS NULL

SELECT * FROM HR.EMP

SELECT SAL + COMM AS TOTAL FROM HR.EMP

------------------------------------------

--#1
SELECT LENGTH(ENAME) FROM HR.EMP

--#2
SELECT LENGTH(ENAME) FROM HR.EMP WHERE JOB = 'MANAGER'

--#3
UPDATE HR.EMP SET COMM = NULL WHERE COMM = 0

SELECT ENAME, JOB FROM HR.EMP WHERE COMM IS NULL

--#4
SELECT HIREDATE FROM HR.EMP WHERE COMM IS NOT NULL

--#5
SELECT SUBSTR(ENAME, 2) FROM HR.EMP

--#6
SELECT SUBSTR(ENAME, 1, 3) FROM HR.EMP

--#7
SELECT REPLACE(ENAME, 'K', 'P') FROM HR.EMP

--#8
SELECT EMPNO || '번은 ' || ENAME || '입니다' AS CONCAT_RESULT FROM HR.EMP 

--#9
SELECT HIREDATE, 
TO_CHAR(SYSDATE, 'MM') AS MONTH, TO_CHAR(SYSDATE, 'DAY') AS DAY FROM HR.EMP

--#10
SELECT JOB,
CASE JOB
	WHEN 'MANAGER' THEN 'LEVEL1'
	WHEN 'SALESMAN' THEN 'LEVEL2'
	ELSE 'LEVEL3'
END AS LEVEL_RESULT
FROM HR.EMP

------------------------------------------------------

SELECT * FROM HR.EMP

SELECT COUNT(*) FROM HR.EMP

SELECT COUNT(SAL) FROM HR.EMP

SELECT COUNT(SAL) FROM HR.EMP WHERE JOB = 'SALESMAN'

SELECT COUNT(SAL), SUM(SAL), AVG(SAL), MIN(SAL), MAX(SAL) FROM HR.EMP WHERE JOB = 'SALESMAN'

SELECT JOB, COUNT(SAL), SUM(SAL), ROUND(AVG(SAL)), MIN(SAL), MAX(SAL) FROM HR.EMP 
GROUP BY JOB
HAVING COUNT(SAL) >= 4 -- 그룹을 지어서 검색 후, 필터링을 하고자 하는 경우
ORDER BY JOB DESC -- 이미 모든 검색이 다 끝난 후 그 결과를 정렬하고자 하는 경우, 맨 끝에 작성

-------------------------------------------------------------------------

--#1
SELECT COUNT(*) FROM HR.EMP

--#2
SELECT COUNT(*) FROM HR.EMP WHERE DEPTNO = 20 AND MGR <= 7700

--#3
SELECT MIN(SAL) FROM HR.EMP WHERE DEPTNO = 10 OR DEPTNO = 20

--#4
SELECT MIN(SAL), MAX(SAL), SUM(SAL) FROM HR.EMP

--#5
SELECT ROUND(AVG(SAL)) FROM HR.EMP GROUP BY DEPTNO

--#6
SELECT ROUND(SUM(SAL)), DEPTNO FROM HR.EMP GROUP BY DEPTNO ORDER BY DEPTNO 

--#7
SELECT ROUND(AVG(SAL)) FROM HR.EMP GROUP BY DEPTNO HAVING AVG(SAL) >= 2000 ORDER BY DEPTNO DESC 

--#8
SELECT COUNT(*), ROUND(AVG(SAL)) FROM HR.EMP WHERE JOB = 'MANAGER'

--#9
SELECT COUNT(*) FROM HR.EMP WHERE ENAME LIKE '%S%'

--#10
SELECT COUNT(*) FROM HR.EMP WHERE SAL >= 3000 AND COMM IS NOT NULL ORDER BY SAL DESC 

----------------------------

CREATE TABLE "HR"."MEMBER5" 
   ("ID" VARCHAR2(10), 
	"PW" VARCHAR2(10), 
	"NAME" VARCHAR2(10), 
	"TEL" VARCHAR2(10), 
	 CONSTRAINT "MEMBER_PK5" PRIMARY KEY ("ID")
	)
	 
CREATE TABLE "HR"."BBS5" 
(	"NO" NUMBER(38,0), 
	"TITLE" VARCHAR2(100), 
	"CONTENT" VARCHAR2(100), 
	"WRITER" VARCHAR2(100), 
	 CONSTRAINT "BBS_PK5" PRIMARY KEY ("NO")
)


ALTER TABLE HR.MEMBER5 MODIFY PW VARCHAR2(100)
	 
ALTER TABLE HR.MEMBER5 MODIFY NAME VARCHAR2(100)

ALTER TABLE HR.MEMBER5 MODIFY TEL VARCHAR2(100)
	 
ALTER TABLE "HR"."BBS5" ADD CONSTRAINT "FK_MEMBER5" FOREIGN KEY ("WRITER") REFERENCES "HR"."MEMBER5" ("ID")

--#1(INNER JOIN)
--INNER JOIN 방법1
SELECT * FROM HR.MEMBER5 m 
INNER JOIN HR.BBS5 b 
ON m.ID = b.WRITER --ID와 WRITER가 똑같은 것만 가져와라

--INNER JOIN 방법2
SELECT * FROM HR.MEMBER5 m, HR.BBS5 b
WHERE m.ID = b.WRITER --ID와 WRITER가 똑같은 것만 가져와라
	 
SELECT b."NO", "TITLE", "NAME" FROM HR.MEMBER5 m 
INNER JOIN HR.BBS5 b 
ON m.ID = b.WRITER

--#2(LEFT OUTER JOIN)
SELECT * FROM HR.MEMBER5 m --MEMBER5 : LEFT, BBS5 : RIGHT 
LEFT OUTER JOIN HR.BBS5 b --MEMBER5 다 나온 상태
ON (m.ID = b.WRITER)

--#3(RIGHT OUTER JOIN)
SELECT * FROM HR.MEMBER5 m 
RIGHT OUTER JOIN HR.BBS5 b --BBS5 다 나온 상태
ON (m.ID = b.WRITER)

SELECT * FROM HR.BBS5 b 
RIGHT OUTER JOIN HR.MEMBER5 m --MEMBER5 다 나온 상태
ON (m.ID = b.WRITER)

----------------------------------------------------------------------------------------

SELECT * FROM HR.EMP e, HR.DEPT d WHERE e.DEPTNO = d.DEPTNO 

SELECT e.EMPNO, e.ENAME, e.JOB, d.DEPTNO, d.LOC FROM HR.EMP e, HR.DEPT d WHERE e.DEPTNO = d.DEPTNO

--EMP테이블의 정보는 다 보이게 하고 싶음. DEPT는 맞는 것만 오른쪽에 붙여주고 싶음.
SELECT * FROM HR.EMP e
LEFT OUTER JOIN HR.DEPT d
ON (e.DEPTNO = d.DEPTNO)

--DEPT테이블의 정보는 다 보이게 하고 싶음. EMP는 맞는 것만 왼쪽에 붙여주고 싶음.
SELECT * FROM HR.EMP e
RIGHT OUTER JOIN HR.DEPT d
ON (e.DEPTNO = d.DEPTNO)

-----------------------------------------------------------

CREATE TABLE HR.COMPANY(
	ID VARCHAR2(200) PRIMARY KEY,
	NAME VARCHAR2(200),
	ADDR VARCHAR2(200),
	TEL VARCHAR2(200)
)

INSERT INTO HR.COMPANY VALUES('c100', 'good', 'seoul', '011')

INSERT INTO HR.COMPANY VALUES('c200', 'happy', 'busan', '012')

INSERT INTO HR.COMPANY VALUES('c300', 'sad', 'ulsan', '013')

INSERT INTO HR.COMPANY VALUES('c400', 'soso', 'gwangju', '014')

SELECT * FROM HR.COMPANY

--#1(INNER JOIN)
SELECT * FROM 
HR.PRODUCT2 p INNER JOIN HR.COMPANY c 
ON (p.COMPANY = c.ID)

--#2(LEFT OUTER JOIN)
SELECT * FROM HR.PRODUCT2 p  --PRODUCT2 : LEFT, COMPANY : RIGHT 
LEFT OUTER JOIN HR.COMPANY c  -- PRODUCT2 다 나온 상태
ON (p.COMPANY = c.ID)

--#2(LEFT OUTER JOIN)
SELECT * FROM HR.PRODUCT2 p  --PRODUCT2 : LEFT, COMPANY : RIGHT 
RIGHT OUTER JOIN HR.COMPANY c  -- COMPANY 다 나온 상태
ON (p.COMPANY = c.ID)
